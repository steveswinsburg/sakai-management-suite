
# This is the main properties file for our application. Internationalise via MyApplication_es.properties for example.

page.title = LMS Management

link.users = Users
link.users.tooltip = Manage users

link.membership = Membership
link.membership.tooltip = Manage user membership in sites

link.attributes = Attributes
link.attributes.tooltip = Manage user attributes

heading.page.users=Users
heading.page.membership=Membership
heading.page.attributes=Attributes

header.user.eid=User Id
header.user.name=Name
header.user.firstname=First Name
header.user.lastname=Last Name
header.user.email=Email
header.user.password=Password
header.user.type=Type
header.user.id=Internal Id
header.user.properties=Additional Attributes

header.user.password.create=Create new password
header.user.password.verify=Verify new password

header.site.title=Site Title
header.site.type=Type
header.site.members=Members

header.membership.siteid=Site Id
header.membership.usereid=User
header.membership.role=Role

heading.tab.user.import=Import users
heading.tab.user.list=Users
heading.tab.user.create=Create a user
heading.tab.membership.list=Site members
heading.tab.membership.import=Import membership

error.parse.upload=Couldn't parse uploaded file

action.user.confirm=Finish
action.user.created=User created successfully
action.user.updated=User updated
action.users.imported=Successfully added/updated {0} users
action.user.create.failed=Failed to create user
action.user.update.failed=Failed to update user

action.membership.confirm=Finish

heading.user.import.upload=Import Users
summary.user.import.upload.1=Select a CSV/XLS file containing the details of the you users you wish to create. Any existing users will have their info updated (except their password).
summary.user.import.upload.2=File requirements
summary.user.import.upload.3=Include the following headings: user id, first name, last name, email, password, type.
summary.user.import.upload.4=Column headings must match EXACTLY the list above. They do not need to be in the same order.
summary.user.import.upload.5=Fields must be comma separated, contain no spaces between fields and each field surrounded with double quotes if it is to contain a space.
summary.user.import.upload.6=You can also add other columns and these will be stored as user properties, as long as the headings do not clash with the main set above. It can be any arbitrary data.

heading.user.import.confirm=Import Users
summary.user.import.confirm.1=The following data was found in the uploaded file. If this is correct, click 'Finish'.
summary.user.import.confirm.2=Note that any users that already exist will have their records updated (except for their password).


heading.membership.import.upload=Import Members
summary.membership.import.upload.1=Select a CSV/XLS file containing the details of the you members you wish to import.
summary.membership.import.upload.2=File requirements
summary.membership.import.upload.3=Include the following headings: site id, user id, role.
summary.membership.import.upload.4=Column headings must match EXACTLY the list above. They do not need to be in the same order.
summary.membership.import.upload.5=Fields must be comma separated, contain no spaces between fields and each field surrounded with double quotes if it is to contain a space.

heading.membership.import.confirm=Import Members
summary.membership.import.confirm.1=The following data was found in the uploaded file. If this is correct, click 'Finish'.
summary.membership.import.confirm.2=Note that any members that already exist in the site(s) will have their role updated to the value in the summary table below. If the role specified is invalid for that site, the member will be skipped.

action.members.imported=Successfully added {0} members



# these keys are returned by the impl when importing users. Must be kept in sync and must have exactly one parameter, the item id.
impl.import.user.response.already.exists=User already exists: {0}
impl.import.user.response.invalid.userid=User is invalid: {0}
impl.import.member.response.invalid.siteid=Site is invalid: {0}
impl.import.member.response.invalid.userid=User is invalid: {0}
impl.import.member.response.invalid.siteid.2=Site is invalid: {0} - the site may have been deleted during the import and the final success count will be inaccurate.
impl.import.member.response.invalid.role=Invalid role: {0}
impl.update.member.response.failed=Couldn't update user: {0}


import.user.no.permission=You do not have permission to import users

action.search=Search
action.clear=Reset
header.search=Filter:

header.attribute.addoredit=Add/Edit an attribute
header.attribute.key=Key
header.attribute.value=Value
header.attribute.remove=Remove

action.confirm.remove.attribute=Are you sure you want to remove this attribute? Note that any data already associated with this attribute will be orphaned.

summary.attributes=Key is the persisted value, eg 'room', Value is the display value, eg 'Room Number'. Note that if you edit an attribute key and users already have data associated with that attribute, that data will be orphaned.
action.edit=Edit
header.attribute.preview=Preview

label.required=*
